# Generated by Django 5.1.5 on 2025-02-26 10:27

import account.models
import django.contrib.auth.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nickname', models.CharField(max_length=50, unique=True, verbose_name='Ник пользователя')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='Email пользователя')),
                ('image', models.ImageField(blank=True, null=True, upload_to=account.models.CustomUser.upload_to_path, validators=[django.core.validators.FileExtensionValidator(['jpg', 'png'])], verbose_name='Аватарка пользователя')),
                ('age', models.IntegerField(blank=True, null=True)),
                ('city', models.CharField(blank=True, choices=[('', ''), ('kyiv', 'Киев'), ('kharkiv', 'Харьков'), ('odesa', 'Одесса'), ('dnipro', 'Днепр'), ('lviv', 'Львов'), ('zaporizhzhia', 'Запорожье'), ('vinnitsa', 'Винница'), ('mykolaiv', 'Николаев'), ('cherkasy', 'Черкассы'), ('chernihiv', 'Чернигов'), ('chernivtsi', 'Черновцы'), ('poltava', 'Полтава'), ('kherson', 'Херсон'), ('sumy', 'Сумы'), ('zhytomyr', 'Житомир'), ('ivano_frankivsk', 'Ивано-Франковск'), ('lutsk', 'Луцк'), ('ternopil', 'Тернополь'), ('uzhhorod', 'Ужгород'), ('kropyvnytskyi', 'Кропивницкий'), ('rivno', 'Ровно'), ('mariupol', 'Мариуполь'), ('sevastopol', 'Севастополь'), ('simferopol', 'Симферополь')], default='', max_length=50, null=True, verbose_name='Город')),
                ('profession', models.CharField(blank=True, max_length=100, null=True, verbose_name='Профессия')),
                ('hobby', models.CharField(blank=True, max_length=100, null=True, verbose_name='Хобби')),
                ('extra_info', models.TextField(blank=True, null=True, verbose_name='Побольше о себе')),
                ('following', models.ManyToManyField(blank=True, related_name='followers', to=settings.AUTH_USER_MODEL)),
                ('friends', models.ManyToManyField(blank=True, related_name='user_friends', to=settings.AUTH_USER_MODEL)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'Аккаунт',
                'verbose_name_plural': 'Аккаунты',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='NewsFeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст')),
                ('file', models.FileField(upload_to='', verbose_name='Файл или фото')),
                ('created_at', models.DateTimeField(verbose_name='Дата создания')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Запись новостной лента',
                'verbose_name_plural': 'Записи новостной ленты',
            },
        ),
        migrations.CreateModel(
            name='NewsFeedComments',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Текст комментария')),
                ('file', models.FileField(upload_to='', verbose_name='Файл или фото комментария')),
                ('created_at', models.DateTimeField(verbose_name='Дата создания')),
                ('newsfeed', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='account.newsfeed', verbose_name='Чат')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Комментарий пользователя')),
            ],
            options={
                'verbose_name': 'Комментарий к записи в новостной лента',
                'verbose_name_plural': 'Комментарии к записи в новостной лента',
            },
        ),
    ]
